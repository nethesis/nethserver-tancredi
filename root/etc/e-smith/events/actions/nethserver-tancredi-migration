#!/bin/bash

#
# Copyright (C) 2020 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

if [[ $(/sbin/e-smith/config getprop nethvoice ProvisioningEngine) != 'tancredi' ]]; then
    echo "Provisioning engine is not tancredi. Don't migrate."
    exit
fi

mysql_password=$(perl -mNethServer::Password -e "print NethServer::Password::store('mysql')")

function fpbx_query {
    mysql -uroot -p$mysql_password asterisk -B --silent -e "$1"
    if [[ $? != 0 ]] ; then
        echo "[ERROR] query FAILED: $1"
    fi
}

# Get Tancredi and NethVoice credentials
secret=$(perl -mNethServer::Password -e "print NethServer::Password::store('nethvoice')")
User="admin"
fpbxPasswordHash=$(fpbx_query "SELECT password_sha1 FROM ampusers WHERE username = '${User}'")
SecretKey=$(echo -n "${User}${fpbxPasswordHash}${secret}" | sha1sum | awk '{print $1}')

# Get all models available in Tancredi
TANCREDI_MODELS=($(/usr/bin/curl -s 'http://localhost/tancredi/api/v1/models' -H "User: ${User}" -H "Secretkey: ${SecretKey}" | jq -r '.[].name | @sh'))

# Cicle through all brands known by Tancredi
for MAC in $(fpbx_query "SELECT mac FROM endpointman_mac_list WHERE mac LIKE '0C383E%' OR mac LIKE '7C2F80%' OR mac LIKE '589EC6%' OR mac LIKE '005058%' OR mac LIKE '000413%' OR mac LIKE '001565%' OR mac LIKE '805E0C%' OR mac LIKE '805EC0%' OR mac LIKE '9C7514%'"); do

    # Get old provisioning brand
    BRAND=$(fpbx_query "SELECT endpointman_brand_list.name FROM endpointman_model_list JOIN endpointman_mac_list ON endpointman_model_list.id = endpointman_mac_list.model JOIN endpointman_brand_list ON endpointman_brand_list.id = endpointman_model_list.brand WHERE endpointman_mac_list.mac = '$MAC'")

    # Get old provisioning model
    MODEL=$(fpbx_query "SELECT endpointman_model_list.model FROM endpointman_model_list JOIN endpointman_mac_list ON endpointman_model_list.id = endpointman_mac_list.model WHERE endpointman_mac_list.mac = '$MAC'")

    # Translate MAC Address from old format to new format
    TANCREDI_MAC=$(echo $MAC | sed 's/\([A-F0-9][A-F0-9]\)\([A-F0-9][A-F0-9]\)\([A-F0-9][A-F0-9]\)\([A-F0-9][A-F0-9]\)\([A-F0-9][A-F0-9]\)\([A-F0-9][A-F0-9]\)/\1-\2-\3-\4-\5-\6/')
    # Set Tancredi displayname
    TANCREDI_DISPLAY_NAME=$BRAND
    TANCREDI_MODEL=""

    ## Fanvil
    if [[ $BRAND == 'Fanvil' ]]; then
        if [[ $MODEL == 'X3S' ]]; then
	    TANCREDI_MODEL="fanvil-X3SG"
	fi
        if [[ $MODEL == 'X5S' ]]; then
	    TANCREDI_MODEL="fanvil-X5"
	fi
        if [[ $MODEL == 'X4' || $MODEL == 'X5' || $MODEL == 'X6' ]]; then
	    TANCREDI_MODEL="fanvil-$MODEL"
	fi
    fi

    ## Gigaset
    if [[ $BRAND == 'Gigaset' ]]; then
        if [[ $MODEL == 'Maxwell-Basic' ]]; then
            TANCREDI_MODEL="gigaset-MaxwellBasic"
        fi
        if [[ $MODEL == 'Maxwell-2' ]]; then
            TANCREDI_MODEL="gigaset-Maxwell2"
        fi
        if [[ $MODEL == 'Maxwell-3' ]]; then
            TANCREDI_MODEL="gigaset-Maxwell3"
        fi
    fi

    ## Sangoma
    if [[ "${TANCREDI_MODELS[@]}" =~ "'sangoma-$MODEL'" ]]; then
        TANCREDI_MODEL="sangoma-$MODEL"
    fi

    ## Snom
    if [[ "${TANCREDI_MODELS[@]}" =~ "'snom-$MODEL'" ]]; then
        TANCREDI_MODEL="snom-$MODEL"
    fi

    ## Yealink
    if [[ $BRAND == 'Yealink/Dreamwave' ]]; then
        TANCREDI_DISPLAY_NAME='Yealink'
	TMPMODEL=$(echo $MODEL | sed 's/\(T[0-9]*\).*/\1/')
	if [[ "${TANCREDI_MODELS[@]}" =~ "'yealink-$TMPMODEL'" ]]; then
    	    TANCREDI_MODEL="yealink-$TMPMODEL"
	fi
    fi


    CURLDATA="{\"mac\":\"${TANCREDI_MAC}\",\"display_name\":\"${TANCREDI_DISPLAY_NAME}\""
    if [[ ! -z $TANCREDI_MODEL ]] ; then
	# Add model only if it exists into Tancredi
        CURLDATA="${CURLDATA},\"model\":\"${TANCREDI_MODEL}\""
    fi
    CURLDATA="${CURLDATA}}"

    # Insert mac into Tancredi
    echo -n "Migrating $MAC $BRAND $MODEL -> $TANCREDI_MAC $TANCREDI_MODEL $TANCREDI_DISPLAY_NAME ..."
    PHONE_POST_RES=$(/usr/bin/curl -s 'http://localhost/tancredi/api/v1/phones' \
	    -H "User: ${User}" \
	    -H "Secretkey: ${SecretKey}" \
	    -H 'Content-Type: application/json;charset=utf-8' \
	    --data $CURLDATA \
	    -X POST)
    # Check Add phone into tancredi /usr/bin/curl output
    if [[ $? == 0 ]]; then
        echo 'Succes!'

	# Configure RPS using Falconieri
	if [[ $BRAND != 'Sangoma' ]]; then 
            FALCONIERI_URL=$(echo $PHONE_POST_RES | jq -r '.provisioning_url1')
	    FALCONIERI_CURL_DATA="{\"url\":\"${FALCONIERI_URL}\"}"
	    /usr/bin/curl -ks "https://localhost/freepbx/rest/phones/rps/${TANCREDI_MAC}" \
		    -H "User: ${User}" \
		    -H "Secretkey: ${SecretKey}" \
		    -H 'Content-Type: application/json;charset=utf-8' \
		    --data ${FALCONIERI_CURL_DATA} \
		    -X POST
	    if [[ $? != 0 ]]; then
                echo "Failed to register phone ${BRAND}${TANCREDI_MODEL} ${TANCREDI_MAC} into RPS"
            fi
	fi
    else 
        echo 'Failed!'
    fi
done
